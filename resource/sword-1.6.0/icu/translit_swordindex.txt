//--------------------------------------------------------------------
// Copyright (c) 1999-2001, International Business Machines
// Corporation and others.  All Rights Reserved.
//--------------------------------------------------------------------
// THIS IS A MACHINE-GENERATED FILE
// Tool: dumpicurules.bat
// Source: Transliterator_index.txt
// Date: Mon Dec  3 11:44:30 2001
//--------------------------------------------------------------------

//--------------------------------------------------------------------
// N.B.: This file has been generated mechanically from the
// corresponding ICU4J file, which is the master file that receives
// primary updates.  The colon-delimited fields have been split into
// separate strings.  For 'file' and 'internal' lines, the encoding
// field has been deleted, since the encoding is processed at build
// time in ICU4C.  Certain large rule sets not intended for general
// use have been commented out with the notation "Java only".
//--------------------------------------------------------------------

translit_swordindex {
  RuleBasedTransliteratorIDs {
// Copyright (c) 2001, International Business Machines Corporation and
// others. All Rights Reserved.
//
// TRANSLITERATOR INDEX FILE.  This file lists the non-algorithmic
// system transliterators.  It allows arbitrary mappings between
// transliterator IDs and file names, and also allows the system to
// define aliases for transliterators, so that "Latin-Hangul", for
// example, can be implemented transparently as the compound
// "Latin-Jamo;Jamo-Hangul".  Internal IDs may also be defined; these
// are invisible to the user, but can be composed together by the
// system to create visible transliterators.
//
// Blank lines and lines beginning with '#' are ignored.
//
// Lines in this file have one of the following forms (text not
// enclosed by <> is literal):
//
//   <id>:file:<resource>:<encoding>:<direction>
//   <id>:internal:<resource>:<encoding>:<direction>
//   <id>:alias:<getInstanceArg>
//
// <id> is the ID of the system transliterator being defined.  These
// are public IDs enumerated by Transliterator.getAvailableIDs(),
// unless the second field is "internal".
//
// <resource> is a ResourceReader resource name.  Currently these refer
// to file names under com/ibm/text/resources.  This string is passed
// directly to ResourceReader, together with <encoding>.
//
// <encoding> is the character encoding to use when reading <resource>;
// passed directly to ResourceReader.  E.g., "UTF8".
//
// <direction> is either "FORWARD" or "REVERSE".
//
// <getInstanceArg> is a string to be passed directly to
// Transliterator.getInstance().  The returned Transliterator object
// then has its ID changed to <id> and is returned.

// ICU < 2.0 additions
{ "Latin-Hebrew", "file", "translit_Latin_Hebrew", "FORWARD" },
{ "Hebrew-Latin", "file", "translit_Latin_Hebrew", "REVERSE" },
{ "Latin-Arabic", "file", "translit_Latin_Arabic", "FORWARD" },
{ "Arabic-Latin", "file", "translit_Latin_Arabic", "REVERSE" },

// xtradata additions
//{ "Han-Pinyin", "file", "translit_Han_Pinyin", "FORWARD" },
//{ "Kanji-English", "file", "translit_Kanji_English", "FORWARD" },
//{ "Kanji-OnRomaji", "file", "translit_Kanji_OnRomaji", "FORWARD" },
//{ "HTMLEntities-Unicode", "file", "translit_HTMLEnt_Unicode", "FORWARD" },
//{ "Unicode-HTMLEntities", "file", "translit_HTMLEnt_Unicode", "REVERSE" },

// SWORD additions for academic Biblical transliteration schemes
{ "BGreek-Greek", "file", "translit_BGreek_Greek", "FORWARD" },
{ "Greek-BGreek", "file", "translit_BGreek_Greek", "REVERSE" },
{ "Beta-Greek", "file", "translit_BETA_Greek", "FORWARD" },
{ "Greek-Beta", "file", "translit_BETA_Greek", "REVERSE" },
{ "CCAT-Hebrew", "file", "translit_CCAT_Hebrew", "FORWARD" },
{ "Hebrew-CCAT", "file", "translit_CCAT_Hebrew", "REVERSE" }
{ "CCAT-Syriac", "file", "translit_CCAT_Syriac", "FORWARD" },
{ "Syriac-CCAT", "file", "translit_CCAT_Syriac", "REVERSE" },
//{ "Syriac-Hebrew", "alias", "Syriac-CCAT;CCAT-Hebrew", "" },
//{ "Hebrew-Syriac", "alias", "Hebrew-CCAT;CCAT-Syriac", "" },
{ "Latin-Syriac", "file", "translit_Latin_Syriac", "FORWARD" },
{ "Syriac-Latin", "file", "translit_Latin_Syriac", "REVERSE" },

// SWORD additions for other languages
{ "Latin-Thai", "file", "translit_Latin_Thai", "FORWARD" },
{ "Thai-Latin", "file", "translit_Latin_Thai", "REVERSE" },
{ "Latin-Georgian", "file", "translit_Latin_Georgian", "FORWARD" },
{ "Georgian-Latin", "file", "translit_Latin_Georgian", "REVERSE" },
{ "Latin-Armenian", "file", "translit_Latin_Armenian", "FORWARD" },
{ "Armenian-Latin", "file", "translit_Latin_Armenian", "REVERSE" },
{ "Latin-Coptic", "file", "translit_Latin_Coptic", "FORWARD" },
{ "Coptic-Latin", "file", "translit_Latin_Coptic", "REVERSE" },
{ "Latin-Gothic", "file", "translit_Latin_Gothic", "FORWARD" },
{ "Gothic-Latin", "file", "translit_Latin_Gothic", "REVERSE" },
{ "Latin-Ethiopic", "file", "translit_Latin_Ethiopic", "FORWARD" },
{ "Ethiopic-Latin", "file", "translit_Latin_Ethiopic", "REVERSE" },
{ "Latin-Ugaritic", "file", "translit_Latin_Ugaritic", "FORWARD" },
{ "Ugaritic-Latin", "file", "translit_Latin_Ugaritic", "REVERSE" },

{ "Any-Latin1", "file", "translit_Any_Latin1", "FORWARD" },

// eof
  }
}
